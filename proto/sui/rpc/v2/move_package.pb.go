// Copyright (c) Mysten Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.4
// source: sui/rpc/v2/move_package.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// An `Ability` classifies what operations are permitted for a given type
type Ability int32

const (
	Ability_ABILITY_UNKNOWN Ability = 0
	// Allows values of types with this ability to be copied
	Ability_COPY Ability = 1
	// Allows values of types with this ability to be dropped.
	Ability_DROP Ability = 2
	// Allows values of types with this ability to exist inside a struct in global storage
	Ability_STORE Ability = 3
	// Allows the type to serve as a key for global storage operations
	Ability_KEY Ability = 4
)

// Enum value maps for Ability.
var (
	Ability_name = map[int32]string{
		0: "ABILITY_UNKNOWN",
		1: "COPY",
		2: "DROP",
		3: "STORE",
		4: "KEY",
	}
	Ability_value = map[string]int32{
		"ABILITY_UNKNOWN": 0,
		"COPY":            1,
		"DROP":            2,
		"STORE":           3,
		"KEY":             4,
	}
)

func (x Ability) Enum() *Ability {
	p := new(Ability)
	*p = x
	return p
}

func (x Ability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ability) Descriptor() protoreflect.EnumDescriptor {
	return file_sui_rpc_v2_move_package_proto_enumTypes[0].Descriptor()
}

func (Ability) Type() protoreflect.EnumType {
	return &file_sui_rpc_v2_move_package_proto_enumTypes[0]
}

func (x Ability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ability.Descriptor instead.
func (Ability) EnumDescriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{0}
}

type DatatypeDescriptor_DatatypeKind int32

const (
	DatatypeDescriptor_DATATYPE_KIND_UNKNOWN DatatypeDescriptor_DatatypeKind = 0
	DatatypeDescriptor_STRUCT                DatatypeDescriptor_DatatypeKind = 1
	DatatypeDescriptor_ENUM                  DatatypeDescriptor_DatatypeKind = 2
)

// Enum value maps for DatatypeDescriptor_DatatypeKind.
var (
	DatatypeDescriptor_DatatypeKind_name = map[int32]string{
		0: "DATATYPE_KIND_UNKNOWN",
		1: "STRUCT",
		2: "ENUM",
	}
	DatatypeDescriptor_DatatypeKind_value = map[string]int32{
		"DATATYPE_KIND_UNKNOWN": 0,
		"STRUCT":                1,
		"ENUM":                  2,
	}
)

func (x DatatypeDescriptor_DatatypeKind) Enum() *DatatypeDescriptor_DatatypeKind {
	p := new(DatatypeDescriptor_DatatypeKind)
	*p = x
	return p
}

func (x DatatypeDescriptor_DatatypeKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DatatypeDescriptor_DatatypeKind) Descriptor() protoreflect.EnumDescriptor {
	return file_sui_rpc_v2_move_package_proto_enumTypes[1].Descriptor()
}

func (DatatypeDescriptor_DatatypeKind) Type() protoreflect.EnumType {
	return &file_sui_rpc_v2_move_package_proto_enumTypes[1]
}

func (x DatatypeDescriptor_DatatypeKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DatatypeDescriptor_DatatypeKind.Descriptor instead.
func (DatatypeDescriptor_DatatypeKind) EnumDescriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{2, 0}
}

type OpenSignatureBody_Type int32

const (
	OpenSignatureBody_TYPE_UNKNOWN   OpenSignatureBody_Type = 0
	OpenSignatureBody_ADDRESS        OpenSignatureBody_Type = 1
	OpenSignatureBody_BOOL           OpenSignatureBody_Type = 2
	OpenSignatureBody_U8             OpenSignatureBody_Type = 3
	OpenSignatureBody_U16            OpenSignatureBody_Type = 4
	OpenSignatureBody_U32            OpenSignatureBody_Type = 5
	OpenSignatureBody_U64            OpenSignatureBody_Type = 6
	OpenSignatureBody_U128           OpenSignatureBody_Type = 7
	OpenSignatureBody_U256           OpenSignatureBody_Type = 8
	OpenSignatureBody_VECTOR         OpenSignatureBody_Type = 9
	OpenSignatureBody_DATATYPE       OpenSignatureBody_Type = 10
	OpenSignatureBody_TYPE_PARAMETER OpenSignatureBody_Type = 11
)

// Enum value maps for OpenSignatureBody_Type.
var (
	OpenSignatureBody_Type_name = map[int32]string{
		0:  "TYPE_UNKNOWN",
		1:  "ADDRESS",
		2:  "BOOL",
		3:  "U8",
		4:  "U16",
		5:  "U32",
		6:  "U64",
		7:  "U128",
		8:  "U256",
		9:  "VECTOR",
		10: "DATATYPE",
		11: "TYPE_PARAMETER",
	}
	OpenSignatureBody_Type_value = map[string]int32{
		"TYPE_UNKNOWN":   0,
		"ADDRESS":        1,
		"BOOL":           2,
		"U8":             3,
		"U16":            4,
		"U32":            5,
		"U64":            6,
		"U128":           7,
		"U256":           8,
		"VECTOR":         9,
		"DATATYPE":       10,
		"TYPE_PARAMETER": 11,
	}
)

func (x OpenSignatureBody_Type) Enum() *OpenSignatureBody_Type {
	p := new(OpenSignatureBody_Type)
	*p = x
	return p
}

func (x OpenSignatureBody_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpenSignatureBody_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_sui_rpc_v2_move_package_proto_enumTypes[2].Descriptor()
}

func (OpenSignatureBody_Type) Type() protoreflect.EnumType {
	return &file_sui_rpc_v2_move_package_proto_enumTypes[2]
}

func (x OpenSignatureBody_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpenSignatureBody_Type.Descriptor instead.
func (OpenSignatureBody_Type) EnumDescriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{6, 0}
}

type FunctionDescriptor_Visibility int32

const (
	FunctionDescriptor_VISIBILITY_UNKNOWN FunctionDescriptor_Visibility = 0
	FunctionDescriptor_PRIVATE            FunctionDescriptor_Visibility = 1
	FunctionDescriptor_PUBLIC             FunctionDescriptor_Visibility = 2
	FunctionDescriptor_FRIEND             FunctionDescriptor_Visibility = 3
)

// Enum value maps for FunctionDescriptor_Visibility.
var (
	FunctionDescriptor_Visibility_name = map[int32]string{
		0: "VISIBILITY_UNKNOWN",
		1: "PRIVATE",
		2: "PUBLIC",
		3: "FRIEND",
	}
	FunctionDescriptor_Visibility_value = map[string]int32{
		"VISIBILITY_UNKNOWN": 0,
		"PRIVATE":            1,
		"PUBLIC":             2,
		"FRIEND":             3,
	}
)

func (x FunctionDescriptor_Visibility) Enum() *FunctionDescriptor_Visibility {
	p := new(FunctionDescriptor_Visibility)
	*p = x
	return p
}

func (x FunctionDescriptor_Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FunctionDescriptor_Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_sui_rpc_v2_move_package_proto_enumTypes[3].Descriptor()
}

func (FunctionDescriptor_Visibility) Type() protoreflect.EnumType {
	return &file_sui_rpc_v2_move_package_proto_enumTypes[3]
}

func (x FunctionDescriptor_Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FunctionDescriptor_Visibility.Descriptor instead.
func (FunctionDescriptor_Visibility) EnumDescriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{7, 0}
}

type OpenSignature_Reference int32

const (
	OpenSignature_REFERENCE_UNKNOWN OpenSignature_Reference = 0
	OpenSignature_IMMUTABLE         OpenSignature_Reference = 1
	OpenSignature_MUTABLE           OpenSignature_Reference = 2
)

// Enum value maps for OpenSignature_Reference.
var (
	OpenSignature_Reference_name = map[int32]string{
		0: "REFERENCE_UNKNOWN",
		1: "IMMUTABLE",
		2: "MUTABLE",
	}
	OpenSignature_Reference_value = map[string]int32{
		"REFERENCE_UNKNOWN": 0,
		"IMMUTABLE":         1,
		"MUTABLE":           2,
	}
)

func (x OpenSignature_Reference) Enum() *OpenSignature_Reference {
	p := new(OpenSignature_Reference)
	*p = x
	return p
}

func (x OpenSignature_Reference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpenSignature_Reference) Descriptor() protoreflect.EnumDescriptor {
	return file_sui_rpc_v2_move_package_proto_enumTypes[4].Descriptor()
}

func (OpenSignature_Reference) Type() protoreflect.EnumType {
	return &file_sui_rpc_v2_move_package_proto_enumTypes[4]
}

func (x OpenSignature_Reference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpenSignature_Reference.Descriptor instead.
func (OpenSignature_Reference) EnumDescriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{8, 0}
}

// A Move Package
type Package struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The PackageId of this package
	//
	// A package's `storage_id` is the Sui ObjectId of the package on-chain.
	// Outside of system packages the `storage_id` for every package version is
	// different.
	StorageId *string `protobuf:"bytes,1,opt,name=storage_id,json=storageId,proto3,oneof" json:"storage_id,omitempty"`
	// The PackageId of the first published version of this package.
	//
	// A package's `original_id` (sometimes also called its `runtime_id`) is the
	// `storage_id` of the first version of this package that has been published.
	// The `original_id`/`runtime_id` is stable across all versions of the
	// package and does not ever change.
	OriginalId *string `protobuf:"bytes,2,opt,name=original_id,json=originalId,proto3,oneof" json:"original_id,omitempty"`
	// The version of this package
	Version *uint64 `protobuf:"varint,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
	// The modules defined by this package
	Modules []*Module `protobuf:"bytes,4,rep,name=modules,proto3" json:"modules,omitempty"`
	// List of datatype origins for mapping datatypes to a package version where
	// it was first defined
	TypeOrigins []*TypeOrigin `protobuf:"bytes,5,rep,name=type_origins,json=typeOrigins,proto3" json:"type_origins,omitempty"`
	// The package's transitive dependencies as a mapping from the package's
	// runtime Id (the Id it is referred to by in other packages) to its
	// storage Id (the Id it is loaded from on chain).
	Linkage       []*Linkage `protobuf:"bytes,6,rep,name=linkage,proto3" json:"linkage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Package) Reset() {
	*x = Package{}
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{0}
}

func (x *Package) GetStorageId() string {
	if x != nil && x.StorageId != nil {
		return *x.StorageId
	}
	return ""
}

func (x *Package) GetOriginalId() string {
	if x != nil && x.OriginalId != nil {
		return *x.OriginalId
	}
	return ""
}

func (x *Package) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *Package) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *Package) GetTypeOrigins() []*TypeOrigin {
	if x != nil {
		return x.TypeOrigins
	}
	return nil
}

func (x *Package) GetLinkage() []*Linkage {
	if x != nil {
		return x.Linkage
	}
	return nil
}

// A Move Module.
type Module struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of this module.
	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Serialized bytecode of the module.
	Contents []byte `protobuf:"bytes,2,opt,name=contents,proto3,oneof" json:"contents,omitempty"`
	// List of DataTypes defined by this module.
	Datatypes []*DatatypeDescriptor `protobuf:"bytes,3,rep,name=datatypes,proto3" json:"datatypes,omitempty"`
	// List of Functions defined by this module.
	Functions     []*FunctionDescriptor `protobuf:"bytes,4,rep,name=functions,proto3" json:"functions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Module) Reset() {
	*x = Module{}
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{1}
}

func (x *Module) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Module) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *Module) GetDatatypes() []*DatatypeDescriptor {
	if x != nil {
		return x.Datatypes
	}
	return nil
}

func (x *Module) GetFunctions() []*FunctionDescriptor {
	if x != nil {
		return x.Functions
	}
	return nil
}

// Describes a Move Datatype.
type DatatypeDescriptor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fully qualified name of this Datatype.
	//
	// This is `<defining_id>::<module>::<name>`
	TypeName *string `protobuf:"bytes,1,opt,name=type_name,json=typeName,proto3,oneof" json:"type_name,omitempty"`
	// PackageId of the package where this Datatype is defined.
	//
	// A type's `defining_id` is the `storage_id` of the package version that first introduced or added that type.
	DefiningId *string `protobuf:"bytes,2,opt,name=defining_id,json=definingId,proto3,oneof" json:"defining_id,omitempty"`
	// Name of the module where this Datatype is defined
	Module *string `protobuf:"bytes,3,opt,name=module,proto3,oneof" json:"module,omitempty"`
	// Name of this Datatype
	Name *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// This type's abilities
	Abilities []Ability `protobuf:"varint,5,rep,packed,name=abilities,proto3,enum=sui.rpc.v2.Ability" json:"abilities,omitempty"`
	// Ability constraints and phantom status for this type's generic type parameters
	TypeParameters []*TypeParameter `protobuf:"bytes,6,rep,name=type_parameters,json=typeParameters,proto3" json:"type_parameters,omitempty"`
	// Indicates whether this datatype is a 'STRUCT' or an 'ENUM'
	Kind *DatatypeDescriptor_DatatypeKind `protobuf:"varint,7,opt,name=kind,proto3,enum=sui.rpc.v2.DatatypeDescriptor_DatatypeKind,oneof" json:"kind,omitempty"`
	// Set of fields if this Datatype is a struct.
	//
	// The order of the entries is the order of how the fields are defined.
	Fields []*FieldDescriptor `protobuf:"bytes,8,rep,name=fields,proto3" json:"fields,omitempty"`
	// Set of variants if this Datatype is an enum.
	//
	// The order of the entries is the order of how the variants are defined.
	Variants      []*VariantDescriptor `protobuf:"bytes,9,rep,name=variants,proto3" json:"variants,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatatypeDescriptor) Reset() {
	*x = DatatypeDescriptor{}
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatatypeDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatatypeDescriptor) ProtoMessage() {}

func (x *DatatypeDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatatypeDescriptor.ProtoReflect.Descriptor instead.
func (*DatatypeDescriptor) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{2}
}

func (x *DatatypeDescriptor) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

func (x *DatatypeDescriptor) GetDefiningId() string {
	if x != nil && x.DefiningId != nil {
		return *x.DefiningId
	}
	return ""
}

func (x *DatatypeDescriptor) GetModule() string {
	if x != nil && x.Module != nil {
		return *x.Module
	}
	return ""
}

func (x *DatatypeDescriptor) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DatatypeDescriptor) GetAbilities() []Ability {
	if x != nil {
		return x.Abilities
	}
	return nil
}

func (x *DatatypeDescriptor) GetTypeParameters() []*TypeParameter {
	if x != nil {
		return x.TypeParameters
	}
	return nil
}

func (x *DatatypeDescriptor) GetKind() DatatypeDescriptor_DatatypeKind {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return DatatypeDescriptor_DATATYPE_KIND_UNKNOWN
}

func (x *DatatypeDescriptor) GetFields() []*FieldDescriptor {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DatatypeDescriptor) GetVariants() []*VariantDescriptor {
	if x != nil {
		return x.Variants
	}
	return nil
}

// A generic type parameter used in the declaration of a struct or enum.
type TypeParameter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type parameter constraints
	Constraints []Ability `protobuf:"varint,1,rep,packed,name=constraints,proto3,enum=sui.rpc.v2.Ability" json:"constraints,omitempty"`
	// Whether the parameter is declared as phantom
	IsPhantom     *bool `protobuf:"varint,2,opt,name=is_phantom,json=isPhantom,proto3,oneof" json:"is_phantom,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypeParameter) Reset() {
	*x = TypeParameter{}
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeParameter) ProtoMessage() {}

func (x *TypeParameter) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeParameter.ProtoReflect.Descriptor instead.
func (*TypeParameter) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{3}
}

func (x *TypeParameter) GetConstraints() []Ability {
	if x != nil {
		return x.Constraints
	}
	return nil
}

func (x *TypeParameter) GetIsPhantom() bool {
	if x != nil && x.IsPhantom != nil {
		return *x.IsPhantom
	}
	return false
}

// Descriptor of a field that belongs to a struct or enum variant
type FieldDescriptor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the field
	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Order or position of the field in the struct or enum variant definition.
	Position *uint32 `protobuf:"varint,2,opt,name=position,proto3,oneof" json:"position,omitempty"`
	// The type of the field
	Type          *OpenSignatureBody `protobuf:"bytes,3,opt,name=type,proto3,oneof" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldDescriptor) Reset() {
	*x = FieldDescriptor{}
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDescriptor) ProtoMessage() {}

func (x *FieldDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDescriptor.ProtoReflect.Descriptor instead.
func (*FieldDescriptor) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{4}
}

func (x *FieldDescriptor) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FieldDescriptor) GetPosition() uint32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *FieldDescriptor) GetType() *OpenSignatureBody {
	if x != nil {
		return x.Type
	}
	return nil
}

// Descriptor of an enum variant
type VariantDescriptor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the variant
	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Order or position of the variant in the enum definition.
	Position *uint32 `protobuf:"varint,2,opt,name=position,proto3,oneof" json:"position,omitempty"`
	// Set of fields defined by this variant.
	Fields        []*FieldDescriptor `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VariantDescriptor) Reset() {
	*x = VariantDescriptor{}
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VariantDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariantDescriptor) ProtoMessage() {}

func (x *VariantDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariantDescriptor.ProtoReflect.Descriptor instead.
func (*VariantDescriptor) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{5}
}

func (x *VariantDescriptor) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *VariantDescriptor) GetPosition() uint32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *VariantDescriptor) GetFields() []*FieldDescriptor {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Representation of a type signature that could appear as a field type for a struct or enum
type OpenSignatureBody struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of this signature
	Type *OpenSignatureBody_Type `protobuf:"varint,1,opt,name=type,proto3,enum=sui.rpc.v2.OpenSignatureBody_Type,oneof" json:"type,omitempty"`
	// Fully qualified name of the datatype when `type` is `DATATYPE`
	TypeName *string `protobuf:"bytes,2,opt,name=type_name,json=typeName,proto3,oneof" json:"type_name,omitempty"`
	// Set when `type` is `VECTOR` or `DATATYPE`
	TypeParameterInstantiation []*OpenSignatureBody `protobuf:"bytes,3,rep,name=type_parameter_instantiation,json=typeParameterInstantiation,proto3" json:"type_parameter_instantiation,omitempty"`
	// Position of the type parameter as defined in the containing data type descriptor when `type` is `TYPE_PARAMETER`
	TypeParameter *uint32 `protobuf:"varint,4,opt,name=type_parameter,json=typeParameter,proto3,oneof" json:"type_parameter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenSignatureBody) Reset() {
	*x = OpenSignatureBody{}
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenSignatureBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSignatureBody) ProtoMessage() {}

func (x *OpenSignatureBody) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSignatureBody.ProtoReflect.Descriptor instead.
func (*OpenSignatureBody) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{6}
}

func (x *OpenSignatureBody) GetType() OpenSignatureBody_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return OpenSignatureBody_TYPE_UNKNOWN
}

func (x *OpenSignatureBody) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

func (x *OpenSignatureBody) GetTypeParameterInstantiation() []*OpenSignatureBody {
	if x != nil {
		return x.TypeParameterInstantiation
	}
	return nil
}

func (x *OpenSignatureBody) GetTypeParameter() uint32 {
	if x != nil && x.TypeParameter != nil {
		return *x.TypeParameter
	}
	return 0
}

// Descriptor of a Move function
type FunctionDescriptor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the function
	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Whether the function is `public`, `private` or `public(friend)`
	Visibility *FunctionDescriptor_Visibility `protobuf:"varint,5,opt,name=visibility,proto3,enum=sui.rpc.v2.FunctionDescriptor_Visibility,oneof" json:"visibility,omitempty"`
	// Whether the function is marked `entry` or not.
	IsEntry *bool `protobuf:"varint,6,opt,name=is_entry,json=isEntry,proto3,oneof" json:"is_entry,omitempty"`
	// Ability constraints for type parameters
	TypeParameters []*TypeParameter `protobuf:"bytes,7,rep,name=type_parameters,json=typeParameters,proto3" json:"type_parameters,omitempty"`
	// Formal parameter types.
	Parameters []*OpenSignature `protobuf:"bytes,8,rep,name=parameters,proto3" json:"parameters,omitempty"`
	// Return types.
	Returns       []*OpenSignature `protobuf:"bytes,9,rep,name=returns,proto3" json:"returns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionDescriptor) Reset() {
	*x = FunctionDescriptor{}
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionDescriptor) ProtoMessage() {}

func (x *FunctionDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionDescriptor.ProtoReflect.Descriptor instead.
func (*FunctionDescriptor) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{7}
}

func (x *FunctionDescriptor) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FunctionDescriptor) GetVisibility() FunctionDescriptor_Visibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return FunctionDescriptor_VISIBILITY_UNKNOWN
}

func (x *FunctionDescriptor) GetIsEntry() bool {
	if x != nil && x.IsEntry != nil {
		return *x.IsEntry
	}
	return false
}

func (x *FunctionDescriptor) GetTypeParameters() []*TypeParameter {
	if x != nil {
		return x.TypeParameters
	}
	return nil
}

func (x *FunctionDescriptor) GetParameters() []*OpenSignature {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *FunctionDescriptor) GetReturns() []*OpenSignature {
	if x != nil {
		return x.Returns
	}
	return nil
}

// Representation of a type signature that could appear as a function parameter or return value.
type OpenSignature struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Reference     *OpenSignature_Reference `protobuf:"varint,1,opt,name=reference,proto3,enum=sui.rpc.v2.OpenSignature_Reference,oneof" json:"reference,omitempty"`
	Body          *OpenSignatureBody       `protobuf:"bytes,2,opt,name=body,proto3,oneof" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenSignature) Reset() {
	*x = OpenSignature{}
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSignature) ProtoMessage() {}

func (x *OpenSignature) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSignature.ProtoReflect.Descriptor instead.
func (*OpenSignature) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{8}
}

func (x *OpenSignature) GetReference() OpenSignature_Reference {
	if x != nil && x.Reference != nil {
		return *x.Reference
	}
	return OpenSignature_REFERENCE_UNKNOWN
}

func (x *OpenSignature) GetBody() *OpenSignatureBody {
	if x != nil {
		return x.Body
	}
	return nil
}

// Identifies a struct and the module it was defined in.
type TypeOrigin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModuleName    *string                `protobuf:"bytes,1,opt,name=module_name,json=moduleName,proto3,oneof" json:"module_name,omitempty"`
	DatatypeName  *string                `protobuf:"bytes,2,opt,name=datatype_name,json=datatypeName,proto3,oneof" json:"datatype_name,omitempty"`
	PackageId     *string                `protobuf:"bytes,3,opt,name=package_id,json=packageId,proto3,oneof" json:"package_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypeOrigin) Reset() {
	*x = TypeOrigin{}
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeOrigin) ProtoMessage() {}

func (x *TypeOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeOrigin.ProtoReflect.Descriptor instead.
func (*TypeOrigin) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{9}
}

func (x *TypeOrigin) GetModuleName() string {
	if x != nil && x.ModuleName != nil {
		return *x.ModuleName
	}
	return ""
}

func (x *TypeOrigin) GetDatatypeName() string {
	if x != nil && x.DatatypeName != nil {
		return *x.DatatypeName
	}
	return ""
}

func (x *TypeOrigin) GetPackageId() string {
	if x != nil && x.PackageId != nil {
		return *x.PackageId
	}
	return ""
}

// Upgraded package info for the linkage table.
type Linkage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the original package.
	OriginalId *string `protobuf:"bytes,1,opt,name=original_id,json=originalId,proto3,oneof" json:"original_id,omitempty"`
	// Id of the upgraded package.
	UpgradedId *string `protobuf:"bytes,2,opt,name=upgraded_id,json=upgradedId,proto3,oneof" json:"upgraded_id,omitempty"`
	// Version of the upgraded package.
	UpgradedVersion *uint64 `protobuf:"varint,3,opt,name=upgraded_version,json=upgradedVersion,proto3,oneof" json:"upgraded_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Linkage) Reset() {
	*x = Linkage{}
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Linkage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Linkage) ProtoMessage() {}

func (x *Linkage) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2_move_package_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Linkage.ProtoReflect.Descriptor instead.
func (*Linkage) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2_move_package_proto_rawDescGZIP(), []int{10}
}

func (x *Linkage) GetOriginalId() string {
	if x != nil && x.OriginalId != nil {
		return *x.OriginalId
	}
	return ""
}

func (x *Linkage) GetUpgradedId() string {
	if x != nil && x.UpgradedId != nil {
		return *x.UpgradedId
	}
	return ""
}

func (x *Linkage) GetUpgradedVersion() uint64 {
	if x != nil && x.UpgradedVersion != nil {
		return *x.UpgradedVersion
	}
	return 0
}

var File_sui_rpc_v2_move_package_proto protoreflect.FileDescriptor

const file_sui_rpc_v2_move_package_proto_rawDesc = "" +
	"\n" +
	"\x1dsui/rpc/v2/move_package.proto\x12\n" +
	"sui.rpc.v2\"\xb5\x02\n" +
	"\aPackage\x12\"\n" +
	"\n" +
	"storage_id\x18\x01 \x01(\tH\x00R\tstorageId\x88\x01\x01\x12$\n" +
	"\voriginal_id\x18\x02 \x01(\tH\x01R\n" +
	"originalId\x88\x01\x01\x12\x1d\n" +
	"\aversion\x18\x03 \x01(\x04H\x02R\aversion\x88\x01\x01\x12,\n" +
	"\amodules\x18\x04 \x03(\v2\x12.sui.rpc.v2.ModuleR\amodules\x129\n" +
	"\ftype_origins\x18\x05 \x03(\v2\x16.sui.rpc.v2.TypeOriginR\vtypeOrigins\x12-\n" +
	"\alinkage\x18\x06 \x03(\v2\x13.sui.rpc.v2.LinkageR\alinkageB\r\n" +
	"\v_storage_idB\x0e\n" +
	"\f_original_idB\n" +
	"\n" +
	"\b_version\"\xd4\x01\n" +
	"\x06Module\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x1f\n" +
	"\bcontents\x18\x02 \x01(\fH\x01R\bcontents\x88\x01\x01\x12<\n" +
	"\tdatatypes\x18\x03 \x03(\v2\x1e.sui.rpc.v2.DatatypeDescriptorR\tdatatypes\x12<\n" +
	"\tfunctions\x18\x04 \x03(\v2\x1e.sui.rpc.v2.FunctionDescriptorR\tfunctionsB\a\n" +
	"\x05_nameB\v\n" +
	"\t_contents\"\xbb\x04\n" +
	"\x12DatatypeDescriptor\x12 \n" +
	"\ttype_name\x18\x01 \x01(\tH\x00R\btypeName\x88\x01\x01\x12$\n" +
	"\vdefining_id\x18\x02 \x01(\tH\x01R\n" +
	"definingId\x88\x01\x01\x12\x1b\n" +
	"\x06module\x18\x03 \x01(\tH\x02R\x06module\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\x04 \x01(\tH\x03R\x04name\x88\x01\x01\x121\n" +
	"\tabilities\x18\x05 \x03(\x0e2\x13.sui.rpc.v2.AbilityR\tabilities\x12B\n" +
	"\x0ftype_parameters\x18\x06 \x03(\v2\x19.sui.rpc.v2.TypeParameterR\x0etypeParameters\x12D\n" +
	"\x04kind\x18\a \x01(\x0e2+.sui.rpc.v2.DatatypeDescriptor.DatatypeKindH\x04R\x04kind\x88\x01\x01\x123\n" +
	"\x06fields\x18\b \x03(\v2\x1b.sui.rpc.v2.FieldDescriptorR\x06fields\x129\n" +
	"\bvariants\x18\t \x03(\v2\x1d.sui.rpc.v2.VariantDescriptorR\bvariants\"?\n" +
	"\fDatatypeKind\x12\x19\n" +
	"\x15DATATYPE_KIND_UNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06STRUCT\x10\x01\x12\b\n" +
	"\x04ENUM\x10\x02B\f\n" +
	"\n" +
	"_type_nameB\x0e\n" +
	"\f_defining_idB\t\n" +
	"\a_moduleB\a\n" +
	"\x05_nameB\a\n" +
	"\x05_kind\"y\n" +
	"\rTypeParameter\x125\n" +
	"\vconstraints\x18\x01 \x03(\x0e2\x13.sui.rpc.v2.AbilityR\vconstraints\x12\"\n" +
	"\n" +
	"is_phantom\x18\x02 \x01(\bH\x00R\tisPhantom\x88\x01\x01B\r\n" +
	"\v_is_phantom\"\xa2\x01\n" +
	"\x0fFieldDescriptor\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x1f\n" +
	"\bposition\x18\x02 \x01(\rH\x01R\bposition\x88\x01\x01\x126\n" +
	"\x04type\x18\x03 \x01(\v2\x1d.sui.rpc.v2.OpenSignatureBodyH\x02R\x04type\x88\x01\x01B\a\n" +
	"\x05_nameB\v\n" +
	"\t_positionB\a\n" +
	"\x05_type\"\x98\x01\n" +
	"\x11VariantDescriptor\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x1f\n" +
	"\bposition\x18\x02 \x01(\rH\x01R\bposition\x88\x01\x01\x123\n" +
	"\x06fields\x18\x03 \x03(\v2\x1b.sui.rpc.v2.FieldDescriptorR\x06fieldsB\a\n" +
	"\x05_nameB\v\n" +
	"\t_position\"\xc0\x03\n" +
	"\x11OpenSignatureBody\x12;\n" +
	"\x04type\x18\x01 \x01(\x0e2\".sui.rpc.v2.OpenSignatureBody.TypeH\x00R\x04type\x88\x01\x01\x12 \n" +
	"\ttype_name\x18\x02 \x01(\tH\x01R\btypeName\x88\x01\x01\x12_\n" +
	"\x1ctype_parameter_instantiation\x18\x03 \x03(\v2\x1d.sui.rpc.v2.OpenSignatureBodyR\x1atypeParameterInstantiation\x12*\n" +
	"\x0etype_parameter\x18\x04 \x01(\rH\x02R\rtypeParameter\x88\x01\x01\"\x94\x01\n" +
	"\x04Type\x12\x10\n" +
	"\fTYPE_UNKNOWN\x10\x00\x12\v\n" +
	"\aADDRESS\x10\x01\x12\b\n" +
	"\x04BOOL\x10\x02\x12\x06\n" +
	"\x02U8\x10\x03\x12\a\n" +
	"\x03U16\x10\x04\x12\a\n" +
	"\x03U32\x10\x05\x12\a\n" +
	"\x03U64\x10\x06\x12\b\n" +
	"\x04U128\x10\a\x12\b\n" +
	"\x04U256\x10\b\x12\n" +
	"\n" +
	"\x06VECTOR\x10\t\x12\f\n" +
	"\bDATATYPE\x10\n" +
	"\x12\x12\n" +
	"\x0eTYPE_PARAMETER\x10\vB\a\n" +
	"\x05_typeB\f\n" +
	"\n" +
	"_type_nameB\x11\n" +
	"\x0f_type_parameter\"\xc1\x03\n" +
	"\x12FunctionDescriptor\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01\x12N\n" +
	"\n" +
	"visibility\x18\x05 \x01(\x0e2).sui.rpc.v2.FunctionDescriptor.VisibilityH\x01R\n" +
	"visibility\x88\x01\x01\x12\x1e\n" +
	"\bis_entry\x18\x06 \x01(\bH\x02R\aisEntry\x88\x01\x01\x12B\n" +
	"\x0ftype_parameters\x18\a \x03(\v2\x19.sui.rpc.v2.TypeParameterR\x0etypeParameters\x129\n" +
	"\n" +
	"parameters\x18\b \x03(\v2\x19.sui.rpc.v2.OpenSignatureR\n" +
	"parameters\x123\n" +
	"\areturns\x18\t \x03(\v2\x19.sui.rpc.v2.OpenSignatureR\areturns\"I\n" +
	"\n" +
	"Visibility\x12\x16\n" +
	"\x12VISIBILITY_UNKNOWN\x10\x00\x12\v\n" +
	"\aPRIVATE\x10\x01\x12\n" +
	"\n" +
	"\x06PUBLIC\x10\x02\x12\n" +
	"\n" +
	"\x06FRIEND\x10\x03B\a\n" +
	"\x05_nameB\r\n" +
	"\v_visibilityB\v\n" +
	"\t_is_entry\"\xe6\x01\n" +
	"\rOpenSignature\x12F\n" +
	"\treference\x18\x01 \x01(\x0e2#.sui.rpc.v2.OpenSignature.ReferenceH\x00R\treference\x88\x01\x01\x126\n" +
	"\x04body\x18\x02 \x01(\v2\x1d.sui.rpc.v2.OpenSignatureBodyH\x01R\x04body\x88\x01\x01\">\n" +
	"\tReference\x12\x15\n" +
	"\x11REFERENCE_UNKNOWN\x10\x00\x12\r\n" +
	"\tIMMUTABLE\x10\x01\x12\v\n" +
	"\aMUTABLE\x10\x02B\f\n" +
	"\n" +
	"_referenceB\a\n" +
	"\x05_body\"\xb1\x01\n" +
	"\n" +
	"TypeOrigin\x12$\n" +
	"\vmodule_name\x18\x01 \x01(\tH\x00R\n" +
	"moduleName\x88\x01\x01\x12(\n" +
	"\rdatatype_name\x18\x02 \x01(\tH\x01R\fdatatypeName\x88\x01\x01\x12\"\n" +
	"\n" +
	"package_id\x18\x03 \x01(\tH\x02R\tpackageId\x88\x01\x01B\x0e\n" +
	"\f_module_nameB\x10\n" +
	"\x0e_datatype_nameB\r\n" +
	"\v_package_id\"\xba\x01\n" +
	"\aLinkage\x12$\n" +
	"\voriginal_id\x18\x01 \x01(\tH\x00R\n" +
	"originalId\x88\x01\x01\x12$\n" +
	"\vupgraded_id\x18\x02 \x01(\tH\x01R\n" +
	"upgradedId\x88\x01\x01\x12.\n" +
	"\x10upgraded_version\x18\x03 \x01(\x04H\x02R\x0fupgradedVersion\x88\x01\x01B\x0e\n" +
	"\f_original_idB\x0e\n" +
	"\f_upgraded_idB\x13\n" +
	"\x11_upgraded_version*F\n" +
	"\aAbility\x12\x13\n" +
	"\x0fABILITY_UNKNOWN\x10\x00\x12\b\n" +
	"\x04COPY\x10\x01\x12\b\n" +
	"\x04DROP\x10\x02\x12\t\n" +
	"\x05STORE\x10\x03\x12\a\n" +
	"\x03KEY\x10\x04b\x06proto3"

var (
	file_sui_rpc_v2_move_package_proto_rawDescOnce sync.Once
	file_sui_rpc_v2_move_package_proto_rawDescData []byte
)

func file_sui_rpc_v2_move_package_proto_rawDescGZIP() []byte {
	file_sui_rpc_v2_move_package_proto_rawDescOnce.Do(func() {
		file_sui_rpc_v2_move_package_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sui_rpc_v2_move_package_proto_rawDesc), len(file_sui_rpc_v2_move_package_proto_rawDesc)))
	})
	return file_sui_rpc_v2_move_package_proto_rawDescData
}

var file_sui_rpc_v2_move_package_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_sui_rpc_v2_move_package_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_sui_rpc_v2_move_package_proto_goTypes = []any{
	(Ability)(0),                         // 0: sui.rpc.v2.Ability
	(DatatypeDescriptor_DatatypeKind)(0), // 1: sui.rpc.v2.DatatypeDescriptor.DatatypeKind
	(OpenSignatureBody_Type)(0),          // 2: sui.rpc.v2.OpenSignatureBody.Type
	(FunctionDescriptor_Visibility)(0),   // 3: sui.rpc.v2.FunctionDescriptor.Visibility
	(OpenSignature_Reference)(0),         // 4: sui.rpc.v2.OpenSignature.Reference
	(*Package)(nil),                      // 5: sui.rpc.v2.Package
	(*Module)(nil),                       // 6: sui.rpc.v2.Module
	(*DatatypeDescriptor)(nil),           // 7: sui.rpc.v2.DatatypeDescriptor
	(*TypeParameter)(nil),                // 8: sui.rpc.v2.TypeParameter
	(*FieldDescriptor)(nil),              // 9: sui.rpc.v2.FieldDescriptor
	(*VariantDescriptor)(nil),            // 10: sui.rpc.v2.VariantDescriptor
	(*OpenSignatureBody)(nil),            // 11: sui.rpc.v2.OpenSignatureBody
	(*FunctionDescriptor)(nil),           // 12: sui.rpc.v2.FunctionDescriptor
	(*OpenSignature)(nil),                // 13: sui.rpc.v2.OpenSignature
	(*TypeOrigin)(nil),                   // 14: sui.rpc.v2.TypeOrigin
	(*Linkage)(nil),                      // 15: sui.rpc.v2.Linkage
}
var file_sui_rpc_v2_move_package_proto_depIdxs = []int32{
	6,  // 0: sui.rpc.v2.Package.modules:type_name -> sui.rpc.v2.Module
	14, // 1: sui.rpc.v2.Package.type_origins:type_name -> sui.rpc.v2.TypeOrigin
	15, // 2: sui.rpc.v2.Package.linkage:type_name -> sui.rpc.v2.Linkage
	7,  // 3: sui.rpc.v2.Module.datatypes:type_name -> sui.rpc.v2.DatatypeDescriptor
	12, // 4: sui.rpc.v2.Module.functions:type_name -> sui.rpc.v2.FunctionDescriptor
	0,  // 5: sui.rpc.v2.DatatypeDescriptor.abilities:type_name -> sui.rpc.v2.Ability
	8,  // 6: sui.rpc.v2.DatatypeDescriptor.type_parameters:type_name -> sui.rpc.v2.TypeParameter
	1,  // 7: sui.rpc.v2.DatatypeDescriptor.kind:type_name -> sui.rpc.v2.DatatypeDescriptor.DatatypeKind
	9,  // 8: sui.rpc.v2.DatatypeDescriptor.fields:type_name -> sui.rpc.v2.FieldDescriptor
	10, // 9: sui.rpc.v2.DatatypeDescriptor.variants:type_name -> sui.rpc.v2.VariantDescriptor
	0,  // 10: sui.rpc.v2.TypeParameter.constraints:type_name -> sui.rpc.v2.Ability
	11, // 11: sui.rpc.v2.FieldDescriptor.type:type_name -> sui.rpc.v2.OpenSignatureBody
	9,  // 12: sui.rpc.v2.VariantDescriptor.fields:type_name -> sui.rpc.v2.FieldDescriptor
	2,  // 13: sui.rpc.v2.OpenSignatureBody.type:type_name -> sui.rpc.v2.OpenSignatureBody.Type
	11, // 14: sui.rpc.v2.OpenSignatureBody.type_parameter_instantiation:type_name -> sui.rpc.v2.OpenSignatureBody
	3,  // 15: sui.rpc.v2.FunctionDescriptor.visibility:type_name -> sui.rpc.v2.FunctionDescriptor.Visibility
	8,  // 16: sui.rpc.v2.FunctionDescriptor.type_parameters:type_name -> sui.rpc.v2.TypeParameter
	13, // 17: sui.rpc.v2.FunctionDescriptor.parameters:type_name -> sui.rpc.v2.OpenSignature
	13, // 18: sui.rpc.v2.FunctionDescriptor.returns:type_name -> sui.rpc.v2.OpenSignature
	4,  // 19: sui.rpc.v2.OpenSignature.reference:type_name -> sui.rpc.v2.OpenSignature.Reference
	11, // 20: sui.rpc.v2.OpenSignature.body:type_name -> sui.rpc.v2.OpenSignatureBody
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_sui_rpc_v2_move_package_proto_init() }
func file_sui_rpc_v2_move_package_proto_init() {
	if File_sui_rpc_v2_move_package_proto != nil {
		return
	}
	file_sui_rpc_v2_move_package_proto_msgTypes[0].OneofWrappers = []any{}
	file_sui_rpc_v2_move_package_proto_msgTypes[1].OneofWrappers = []any{}
	file_sui_rpc_v2_move_package_proto_msgTypes[2].OneofWrappers = []any{}
	file_sui_rpc_v2_move_package_proto_msgTypes[3].OneofWrappers = []any{}
	file_sui_rpc_v2_move_package_proto_msgTypes[4].OneofWrappers = []any{}
	file_sui_rpc_v2_move_package_proto_msgTypes[5].OneofWrappers = []any{}
	file_sui_rpc_v2_move_package_proto_msgTypes[6].OneofWrappers = []any{}
	file_sui_rpc_v2_move_package_proto_msgTypes[7].OneofWrappers = []any{}
	file_sui_rpc_v2_move_package_proto_msgTypes[8].OneofWrappers = []any{}
	file_sui_rpc_v2_move_package_proto_msgTypes[9].OneofWrappers = []any{}
	file_sui_rpc_v2_move_package_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sui_rpc_v2_move_package_proto_rawDesc), len(file_sui_rpc_v2_move_package_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sui_rpc_v2_move_package_proto_goTypes,
		DependencyIndexes: file_sui_rpc_v2_move_package_proto_depIdxs,
		EnumInfos:         file_sui_rpc_v2_move_package_proto_enumTypes,
		MessageInfos:      file_sui_rpc_v2_move_package_proto_msgTypes,
	}.Build()
	File_sui_rpc_v2_move_package_proto = out.File
	file_sui_rpc_v2_move_package_proto_goTypes = nil
	file_sui_rpc_v2_move_package_proto_depIdxs = nil
}
